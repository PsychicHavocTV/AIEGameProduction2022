#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl" // required by the below file (I believe)
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl" // for TEXTURE2D_X() and RW_TEXTURE2D_X

#pragma kernel CSInit
#pragma kernel CSMain

TEXTURE2D_X(image);
SamplerState _LinearClamp;
RWStructuredBuffer<uint> compute_buffer;

[numthreads(64,1,1)]
void CSInit(uint3 id : SV_DispatchThreadID)
{
    compute_buffer[id.x] = 0.0;
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    UNITY_XR_ASSIGN_VIEW_INDEX(id.z);

    float4 tex = image[COORD_TEXTURE2D_X(id.xy)];
    uint value = ceil(tex.r);

    InterlockedAdd(compute_buffer[0], value);
}
